nrow(unit_defs)
rowIndex
?print
print("row: " + rowIndex + "number to add: ", nrow(toAdd))
print("row: ", rowIndex, "number to add: ", nrow(toAdd))
print(foo)
print("waa")
print("waa", 6)
print("waa" + 6)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
dplyr::add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
?dplyr::add_row
?add_row
?tibble::add_row
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
tibble::add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
?filter
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
library(tidyverse)
parsed_snp_file <- "parsed_snp.tsv"
parsed_indel_file <- "parsed_indel.tsv"
unit_defs_file <- "feature_bounds_20170804.tsv"
snps <- read_tsv(parsed_snp_file, comment = "#")
indels <- read_tsv(parsed_indel_file, comment = "#")
unit_defs <- read_tsv(unit_defs_file, comment = "#", skip = 1)
unit_defs <- select(unit_defs, c(gene_id, agg_start, agg_end))
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
rowIndex = 2
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd > 0)) {
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
toAdd
nrow(toAdd > 0
)
?nrow
nrow(toAdd) > 0
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
glimpse(foo)
rowIndex = 1263
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
glimpse(toAdd)
add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
foo
for (rowIndex in 1:nrow(unit_defs)) {
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
glimpse(foo)
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
toAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number snps to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " number ibdels to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
glimpse(foo)
aggregated_variants <- distinct(foo)
glimpse(aggregated_variants)
aggregated_variants %>% group_by(group_id) %>% summarize()
aggregated_variants %>% summarize(group_by(group_id), count(n))
aggregated_variants %>% group_by(group_id) %>% summarize(count(n))
aggregated_variants %>% group_by(group_id) %>% summarize(
)
aggregated_variants %>% group_by(group_id) %>% summarize()
aggregated_variants %>% group_by(group_id) %>% summarize(count(n))
?summarize
aggregated_variants %>% group_by(group_id) %>% summarize(n())
aggregated_variants %>% summarize(group_by(group_id), n())
aggregated_variants %>% group_by(group_id) %>% summarize(n())
aggregated_variants %>% group_by(group_id) %>% summarize(n()) %>% ggplot(aes=group_id) + geom_histogram
aggregated_variants %>% group_by(group_id) %>% summarize(n()) %>% ggplot(aes=group_id) + geom_histogram()
ggplot(data = aggregated_variants %>% group_by(group_id) %>% summarize(n())) +
geom_histogram()
aggregated_variants %>% group_by(group_id) %>% summarize(n())
ggplot(data = aggregated_variants %>% group_by(group_id) %>% summarize(n())) +
geom_histogram()
ggplot(data = aggregated_variants %>% group_by(group_id) %>% summarize(n())) +
geom_histogram(x = group_id)
ggplot(data = aggregated_variants %>% group_by(group_id) %>% summarize(n())) +
geom_bar(x = group_id)
aggregated_variants %>% group_by(group_id) %>% summarize(n())
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
max(counts)
max(counts$`n()`)
range(counts$`n()`)
summarize(aggregated_variants)
glimpse(aggregated_variants)
aggregated_variants
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
100%10
100 %% 10
library(tidyverse)
parsed_snp_file <- "parsed_snp.tsv"
parsed_indel_file <- "parsed_indel.tsv"
unit_defs_file <- "feature_bounds_20170804.tsv"
snps <- read_tsv(parsed_snp_file, comment = "#")
indels <- read_tsv(parsed_indel_file, comment = "#")
unit_defs <- read_tsv(unit_defs_file, comment = "#", skip = 1)
unit_defs <- select(unit_defs, c(gene_id, agg_start, agg_end))
# make an empty tibble
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
# loop over unit defs
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>% # NOTE: could add fields and filter here
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>% # NOTE: could add flanking regions here
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
# for status update, print every 10 rows
if (rowIndex %% 10) {
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
5 %% 10
12 %% 10
# make an empty tibble
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
# loop over unit defs
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>% # NOTE: could add fields and filter here
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>% # NOTE: could add flanking regions here
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
# for status update, print every 10 rows
if (rowIndex %% 10 == 0) {
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
# make an empty tibble
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
# loop over unit defs
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>% # NOTE: could add fields and filter here
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>% # NOTE: could add flanking regions here
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
# for status update, print every 10 rows
if (rowIndex %% 50 == 0) {
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
glimpse(foo)
aggregated_variants <- distinct(foo)
#save it for the analysis pipeline to test for associations with pheontypes of interest!
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
# look at number of variants per aggregation unit:
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
range(counts$`n()`)
# look at number of variants per aggregation unit:
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
glimpse(counts)
range(counts$`n()`)
# look at number of variants per aggregation unit:
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
counts
range(counts$`n()`)
# look at number of variants per aggregation unit:
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
(counts)
range(counts$`n()`)
aggregated_variants <- distinct(foo)
#save it for the analysis pipeline to test for associations with pheontypes of interest!
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
# look at number of variants per aggregation unit:
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
aggregated_variants <- distinct(foo)
#save it for the analysis pipeline to test for associations with pheontypes of interest!
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
# look at number of variants per aggregation unit:
(counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n()))
range(counts$`n()`)
library(tidyverse)
parsed_snp_file <- "parsed_snp.tsv"
parsed_indel_file <- "parsed_indel.tsv"
unit_defs_file <- "feature_bounds_20170804.tsv"
snps <- read_tsv(parsed_snp_file, comment = "#")
indels <- read_tsv(parsed_indel_file, comment = "#")
unit_defs <- read_tsv(unit_defs_file, comment = "#", skip = 1)
unit_defs <- select(unit_defs, c(gene_id, agg_start, agg_end))
# make an empty tibble
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
# loop over unit defs
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>% # NOTE: could add fields and filter here
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>% # NOTE: could add flanking regions here
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
# for status update, print every 10 rows
if (rowIndex %% 50 == 0) {
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
glimpse(foo)
aggregated_variants <- distinct(foo)
#save it for the analysis pipeline to test for associations with pheontypes of interest!
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
# look at number of variants per aggregation unit:
(counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n()))
aggregated_variants <- distinct(foo)
#save it for the analysis pipeline to test for associations with pheontypes of interest!
save(aggregated_variants, file = "chr22_gene_aggregates.RDA")
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n())
counts
range(counts$`n()`)
(counts <- aggregated_variants %>% group_by(group_id) %>% summarize(n()))
range(counts$`n()`)
q()
