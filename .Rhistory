'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
#'(?:gene_status ".+"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'(?:gene_status ".+?"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx2
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'(?:gene_status ".+?"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'.*', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'.*', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
q()
?bokdown
??bookdown
install.packages(bookdown)
install.packages("bookdown")
library(bookdown)
?render_book
q()
setwd("~/Projects/UW/topmed_workshop_2017")
?source_url
?source.url
?source_gist
library(devtools)
?source_gist
print("hello")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35")
intsall.packages(devtools)
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35")
library(devtools)
source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35", filename = "hello.R")
library(devtools)
source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35", filename = "hello.R")
library(devtools)
foo <- source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35", filename = "hello.R")
print(foo)
library(devtools)
foo <- source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35", filename = "hello.R")
print(foo)
library(devtools)
foo <- source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35", filename = "hello.R")
print(foo$value)
source_gist("https://gist.github.com/bheavner/e4a08f74d644b78d9bce4a6575fa8a35#hello-R")
setwd("~/Projects/UW/topmed_workshop_2017_bh")
gtf_source <- "chr22.gtf.gz"
#library(devtools)
#devtools::install_github("UW-GAC/genetable")
library(genetable)
library(devtools)
devtools::install_github("UW-GAC/genetable")
library(genetable)
library(tidyverse)
# import the gtf file to a tidy data frame (a tibble)
gtf <- import_gencode(gtf_source)
# look at the tibble
glimpse(gtf)
# summarize the number of features by tag.
summarize_tag(gtf, tag = "basic")
# filter gtf file to return transcript features tagged basic
basic_transcripts <- filter_gencode(gtf, featurearg = "transcript", tagarg = "basic")
# or filter for features == "gene"
genes <- filter_gencode(gtf, featurearg = "gene")
# define the boundaries of the feature of interest
# this is slow
#gene_bounds <- define_boundaries(basic_transcripts, "gene_id")
gene_bounds <- define_boundaries(genes, "gene_id")
# can check the resulting tibble for sanity
glimpse(gene_bounds)
library(tidyverse)
parsed_snp_file <- "parsed_snp.tsv"
parsed_indel_file <- "parsed_indel.tsv"
unit_defs_file <- "feature_bounds_20170804.tsv"
snps <- read_tsv(parsed_snp_file, comment = "#")
indels <- read_tsv(parsed_indel_file, comment = "#")
unit_defs <- read_tsv(unit_defs_file, comment = "#", skip = 1)
unit_defs <- select(unit_defs, c(gene_id, agg_start, agg_end))
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
print(paste0("row: ", rowIndex, " snps to add: ", nrow(snpsToAdd), " indels to add: ", nrow(toAdd)))
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
aggregated_variants <- distinct(foo)
glimpse(aggregated_variants)
distinct(aggregated_variants$group_id)
distinct(as.tibble(aggregated_variants$group_id))
?download.file
ben.workshop.path <- "https://github.com/bheavner/topmed_workshop_2017_bh/raw/master"
parsed_snp_file <- "parsed_snp.tsv"
file.path(ben.workshop.path, parsed_snp_file)
10%%5
10%%11
11%%10
10%%10
5 %% 10
10 %% 5
1 %% 100
100 %% 1
100 %% 2
foo <- tibble(group_id="", chromosome="", position="", ref="", alt="") %>%
filter(length(group_id)>1)
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (rowIndex %% 10){
print(
paste0("row: ", rowIndex,
" snps to add: ", nrow(snpsToAdd),
" indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (10 %% rowIndex){
print(
paste0("row: ", rowIndex,
" snps to add: ", nrow(snpsToAdd),
" indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (10 %% rowIndex == 0){
print(
paste0("row: ", rowIndex,
" snps to add: ", nrow(snpsToAdd),
" indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
for (rowIndex in 1:nrow(unit_defs)) {
# select snps and insert to foo
snpsToAdd <- select(snps, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (nrow(snpsToAdd) > 0) {
foo <- add_row(
foo,
group_id = snpsToAdd$group_id,
chromosome = snpsToAdd$chr,
position = snpsToAdd$pos,
ref = snpsToAdd$ref,
alt = snpsToAdd$alt
)
}
# select indels and insert to foo
toAdd <- select(indels, c(chr, pos, ref, alt)) %>%
dplyr::filter(between(pos, unit_defs[rowIndex, ]$agg_start, unit_defs[rowIndex, ]$agg_end)) %>%
distinct() %>%
mutate(group_id = unit_defs[rowIndex, ]$gene_id)
if (rowIndex %% 10 == 0){
print(
paste0("row: ", rowIndex,
" snps to add: ", nrow(snpsToAdd),
" indels to add: ", nrow(toAdd)))
}
if (nrow(toAdd) > 0) {
foo <- add_row(
foo,
group_id = toAdd$group_id,
chromosome = toAdd$chr,
position = toAdd$pos,
ref = toAdd$ref,
alt = toAdd$alt
)
}
}
q()
