maybe just do a "is basic" column using regex = '(?:tag "basic")'?
@bheavner
Owner
bheavner commented 6 days ago
sample = 'chr2 HAVANA stop_codon 26611969 26611971 . + 0 gene_id "ENSG00000138018.13"; transcript_id "ENST00000260585.7"; gene_type "protein_coding"; gene_status "KNOWN"; gene_name "EPT1"; transcript_type "protein_coding"; transcript_status "KNOWN"; transcript_name "EPT1-001"; exon_number 10; exon_id "ENSE00001535481.2"; level 2; protein_id "ENSP00000260585.7"; tag "basic"; tag "appris_principal"; tag "CCDS"; tag "seleno"; ccdsid "CCDS46240.1"; havana_gene "OTTHUMG00000151931.3"; havana_transcript "OTTHUMT00000324484.3";'
rx <- paste('gene_id "(.+?)"; transcript_id "(.+?)"; gene_type "(.+?)";',
'.*; gene_name "(.+?)"; transcript_type "(.+?)";',
'transcript_status "(.+?)";',
'transcript_name "(.+?)"; .* tag "(basic)"', sep = " ")
tidyr::extract(as_data_frame(sample), value, c("gene_id",
"transcript_id",
"gene_type",
"gene_name",
"transcript_type",
"transcript_status",
"transcript_name",
"tag"),
rx)
@bheavner bheavner added a commit that referenced this issue 5 days ago
@bheavner 	Fixes #9. This commit modifies the regex to match a given tag.
25b05ce
@bheavner bheavner added a commit that referenced this issue 5 days ago
@bheavner 	Merge branch 'feature/fix_import_bug' into develop
979687f
@bheavner bheavner referenced this issue 5 days ago
Open
Add meaningful tests #14
@bheavner
Owner
bheavner commented a day ago
I'm working on this in ~/script_backup.R
@bheavner bheavner closed this 9 hours ago
@bheavner
Attach files by dragging & dropping,
, or pasting from the clipboard.
Styling with Markdown is supported
sample
str_view(sample, '(tag "(?:.+?)"; +)+')
str_view(example, '(tag "(?:.+?)"; +)+')
str_view(example, '(tag "(?:.+?)"; ?)+')
str_view(sample, '(tag "(?:.+?)"; ?)+')
q()
tibbls(x=c("1,2,3"))
tibbles(x=c("1,2,3"))
library(tidyverse)
tibbles(x=c("1,2,3"))
tibble(x=c("1,2,3"))
tibble(x=1, y = 2)
tibble(x = c(1, 2, 3), y = (2, 2, 3)
tibble(x = c(1, 2, 3), y = c(2, 2, 3))
tibble(x = c(1, 1, 2), y = c(2, 3, 4))
foo <- tibble(x = c(1, 1, 2), y = c(2, 3, 4))
foo %>% group_by(x)
foo %>% group_by(x) %>% summarize(ones = list(x))
bar <- foo %>% group_by(x) %>% summarize(ones = list(x))
bar[[ones]]
bar$ones
bar <- foo %>% group_by(x) %>% summarize(ones = list(y))
bar$ones
bar
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y)))
bar$ones
bar
View(bar)
write.table(bar, file = "testfile.txt")
?summarize_each
?unlist
unlist(bar$ones[1])
unlist(bar$ones)
?purrr
?purrrr
library(purrr)
?purrr
??purrr
library(purrr)
?map
map(bar$ones, unlist())
?walk
bar$ones %>% map(unlist(.))
unlist(bar$ones[1])
?unlist
bar$ones %>% map(unlist(.ones))
bar$ones %>% map(unlist(.))
bar$ones
flatten(bar$ones)
as_vector(bar$ones[[1]])
map(bar$ones, as_vector(.))
map(bar$ones, as_vector())
bar$ones %>% map(as_vector(.))
bar$ones %>% map(print(.))
class(bar$ones %>% map(print(.)))
bar$ones %>% map(print(.))
bar$ones %>% map(unlist(.))
unlist(bar$ones[1])
unlist(bar$ones[[1])
unlist(bar$ones[[1]])
?unlist
bar$ones %>% map(flatten(.))
bar
?write_lines
unlist(bar)
bar$ones
bar
foo <- tibble(x = c(1, 1, 2), y = c(2, 3, 4), z=(1,2))
foo <- tibble(x = c(1, 1, 2), y = c(2, 3, 4), z = c(1,2))
foo <- tibble(x = c(1, 1, 2), y = c(2, 3, 4), z = c(1,2, 0))
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y)))
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y), -z))
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y)))
bar$ones
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y, z)))
(bar <- foo %>% group_by(x) %>% summarize(ones = list(y), two = list(z)))
bar$two
foo
q()
sample <- 'gene_id \"ENSG00000237683.5\"; transcript_id \"ENSG00000237683.5\"; gene_type \"protein_coding\"; gene_status \"KNOWN\"; gene_name \"AL627309.1\"; transcript_type \"protein_coding\"; transcript_status \"KNOWN\"; transcript_name \"AL627309.1\"; level 3;'
library(tidyverse)
library(stringr)
df <- as_data_frame(sample)
rx <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
rx
str_view(df$value, rx)
rx2 <- rx
rx2 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx2)
rx2 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx2)
rx2 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ?", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx2)
rx2 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx2)
rx2 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
#'(?:gene_status ".+"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)";', # required in gtf
'(?:gene_status ".+"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'(?:gene_status ".+?"; )?', # gene_status removed from newer releases
#'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx2
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'(?:gene_status ".+?"; )?', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'.*', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
#'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
'.*', # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
#'(?:transcript_status ".+?"; )?', # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
#'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
#"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
#'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
# "level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]); ", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
# "(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
rx3 <- paste('gene_id "(.+?)"; ', # required gene_id field in gtf
'transcript_id "(.+?)"; ', # required in gtf
'gene_type "(.+?)"; ', # required in gtf
".*", # gene_status removed from newer releases
'gene_name "(.+?)"; ', # required in gtf
'transcript_type "(.+?)";', # required in gtf
".*?", # transcript_status removed from newer releases
'transcript_name "(.+?)"; ', # required in gtf
"(?:exon_number (.+?); )?", # exon_number (not in all lines)
'(?:exon_id "(.+?)"; )?', # exon_id (not in all lines)
"level ([123]);", # required in gtf
"(.*)$", # additional optional fields
sep = "") # join regex string without spaces
str_view(df$value, rx3)
q()
setwd("~/Projects/UW/topmed_workshop_2017_bh")
library(devtools)
devtools::install_github("UW-GAC/wgsaparsr")
library(wgsaparsr)
readLines("snp.tsv.gz", n=2)
# list all fields in an annotation file:
get_fields("snp.tsv.gz")
desired_columns <-
c(
"#chr",
"pos",
"ref",
"alt",
"rs_dbSNP147",
# "CADDphred",
"CADD_phred", #NOTE: different than the indel annotation file.
"VEP_ensembl_Transcript_ID",
"VEP_ensembl_Gene_Name",
"VEP_ensembl_Gene_ID",
"VEP_ensembl_Consequence",
"VEP_ensembl_Amino_Acid_Change",
"VEP_ensembl_LoF",
"VEP_ensembl_LoF_filter",
"VEP_ensembl_LoF_flags",
"VEP_ensembl_LoF_info"
# "1000Gp3_AF" #skipped for the workshop because code doesn't work with this variable name
)
to_split <-
c(
"VEP_ensembl_Consequence",
"VEP_ensembl_Transcript_ID",
"VEP_ensembl_Gene_Name",
"VEP_ensembl_Gene_ID",
"VEP_ensembl_Amino_Acid_Change",
"VEP_ensembl_LoF",
"VEP_ensembl_LoF_filter",
"VEP_ensembl_LoF_flags",
"VEP_ensembl_LoF_info"
)
desired_columns_indel <-
c(
"`#chr`",
"pos",
"ref",
"alt",
"rs_dbSNP147",
"CADDphred",
#  "CADD_phred", #NOTE: different than the general annotation file.
"VEP_ensembl_Transcript_ID",
"VEP_ensembl_Gene_Name",
"VEP_ensembl_Gene_ID",
"VEP_ensembl_Consequence",
"VEP_ensembl_Amino_Acid_Change",
"VEP_ensembl_LoF",
"VEP_ensembl_LoF_filter",
"VEP_ensembl_LoF_flags",
"VEP_ensembl_LoF_info"
# "1000Gp3_AF"#skipped for the workshop because code doesn't work with this variable name
)
parse_indel_to_file("indel.tsv.gz", "parsed_indel.tsv", desired_columns_indel, to_split, verbose = TRUE)
readLines("parsed_indel.tsv", n=2)
readLines("parsed_indel.tsv", n=2)
# list all fields in an annotation file:
get_fields("parsed_indel.tsv")
q()
